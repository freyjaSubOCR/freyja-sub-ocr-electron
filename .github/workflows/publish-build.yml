name: publish-build

on:
  push:
    branches: [buildtest]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    if: "!contains(github.event.head_commit.message, 'publish-build skip')"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: MacOS install ffmpeg
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash
        run: brew install ffmpeg

      - name: Linux install ffmpeg
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          sudo add-apt-repository ppa:jonathonf/ffmpeg-4
          sudo apt-get install libavcodec-dev libavformat-dev libavdevice-dev libavfilter-dev libavutil-dev libpostproc-dev libswresample-dev libswscale-dev

      - name: Install packages
        run: yarn 

      - name: Windows build
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell
        run: |
          $env:GH_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          yarn electron:build --windows 7z --publish always

      - name: MacOS build
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash
        run: |
          export CSC_IDENTITY_AUTO_DISCOVERY=false
          export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          yarn electron:build --macos 7z --publish always

      - name: Linux build
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          yarn electron:build --linux 7z --publish always
